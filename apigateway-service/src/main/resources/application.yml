server:
  port: 8000

eureka:
  client:
    register-with-eureka: true # eureka 등록 여부
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE # 유레카에 등록된 이름 확인
#          predicates:
#            - Path=/user-service/**
        - id: user-service
          uri: lb://USER-SERVICE # 유레카에 등록된 이름 확인
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie # 쿠키 삭제 후 실행
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # 앞 패스로 들어오면 뒤 서비스 형태로 바꾸겠다
        - id: user-service
          uri: lb://USER-SERVICE # 유레카에 등록된 이름 확인
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE # 유레카에 등록된 이름 확인
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: catalog-service
          uri: lb://CATALOG-SERVICE # 유레카에 등록된 이름 확인
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE # 유레카에 등록된 이름 확인
          predicates:
            - Path=/order-service/**
        - id: first-service
          uri: lb://MY-FIRST-SERVICE
          predicates: # 조건
            - Path=/first-service/** # 해당 주소 요청이 오면 위에서 설정한 uri로 연결
          filters:
            - CustomFilter
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
        - id: second-service
          uri: lb://MY-SECOND-SERVICE
          predicates:
            - Path=/second-service/**
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi, Logging Filter.
                preLogger: true
                postLogger: true